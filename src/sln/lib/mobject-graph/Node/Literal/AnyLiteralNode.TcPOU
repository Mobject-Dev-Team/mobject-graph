<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="AnyLiteralNode" Id="{85e13415-5879-0ba5-1c1a-0b03249c2944}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FINAL AnyLiteralNode EXTENDS Node
VAR
	value : I_Datatype;
	out : I_Datatype;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{918d09cf-e437-4fe5-86c5-46d25f4f5ecd}" />
    <Folder Name="Destructor" Id="{528f345b-6c2a-0f7b-3c2d-7b910d92a7f6}" />
    <Method Name="Clone" Id="{beb6c500-d19f-4afb-9260-a55625d0fe44}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Node
VAR
	pNode : POINTER TO AnyLiteralNode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(AnyLiteralNode(Datatype := value));
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{f4160fdf-09fe-0cd8-1b60-6ec763312c3a}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

value.Dispose();
out.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{bc60c25b-cac8-42e7-aa05-3d55fefc73ef}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Datatype : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.value := Datatype.Clone();
THIS^.out := Datatype.Clone();

AddParameter('value', THIS^.value);
AddOutput('out', THIS^.out);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{806d610a-9419-04b4-021c-165e4b62223b}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[memcpy(out.Address, value.Address, value.Size);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>