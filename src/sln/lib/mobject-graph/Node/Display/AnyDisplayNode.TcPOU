<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="AnyDisplayNode" Id="{3f970c85-c84e-06f5-1b26-f288fea46c18}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FINAL AnyDisplayNode EXTENDS Node
VAR
	in : I_Datatype;
	display : I_Datatype;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{e5baa6a4-0511-036e-1361-2e876b47626a}" />
    <Folder Name="Destructor" Id="{f1bc5104-293e-0f0a-3069-8aff4a994283}" />
    <Method Name="Clone" Id="{35e5880d-6d72-098e-33cd-59f86d28f6bc}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Node
VAR
	pNode : POINTER TO AnyDisplayNode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(AnyDisplayNode(Datatype := in));
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{6165bbc7-6bc1-014b-1d2e-ca54dee9428d}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

in.Dispose();
display.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{31313a86-911e-0fe8-1d54-ffa5f3089634}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Datatype : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.in := Datatype.Clone();
THIS^.display := Datatype.Clone();

AddInput('in', THIS^.in);
AddContent('display', THIS^.display);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{b749ed8b-3920-01f1-1c61-253d96ad5d3e}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[memcpy(display.Address, in.Address, in.Size);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>