<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Parameter" Id="{bad9d0de-f058-492f-999d-54e5404f5ee7}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Parameter EXTENDS Disposable IMPLEMENTS I_Parameter
VAR
	_name : T_MAXSTRING;
	_data : I_Datatype;
	_parent : I_HostParameters;
	eventEmitter : EventEmitter;
	metadataHost : MetadataHost(THIS^, eventEmitter);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{0fb344eb-1953-45be-b6c3-92152d218a7e}" />
    <Method Name="Accept" Id="{04a7a62c-6cae-4a7b-a4b3-bef44a984181}">
      <Declaration><![CDATA[METHOD PUBLIC Accept
VAR_INPUT
	Visitor : I_ParameterVisitor;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Visitor.VisitParameter(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddMetadata" Id="{25053516-d7c2-0af4-0961-423bd581adcd}">
      <Declaration><![CDATA[METHOD PUBLIC AddMetadata : I_HostMetadata
VAR_INPUT
	Name : T_MAXSTRING;
	Data : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Metadatum.AddDataAsMetadata(Name, Data);
AddMetadata := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Data" Id="{1f0486d5-d52a-49ba-a054-faae67bb8741}">
      <Declaration><![CDATA[PROPERTY PUBLIC Data : I_Datatype]]></Declaration>
      <Get Name="Get" Id="{118654b5-095d-4f42-9385-6c7e9f708a99}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Data := _data;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{da38514d-cea0-4e20-8400-9e2e3dc6adf5}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	Data : I_Datatype;
	Parent : I_HostParameters;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_name := Name;
_data := Data;
RegisterWithParent(Parent);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Metadatum" Id="{0afbb18b-4575-4881-a00d-2f3c3483d254}">
      <Declaration><![CDATA[PROPERTY PUBLIC Metadatum : I_Metadatum]]></Declaration>
      <Get Name="Get" Id="{748178ca-1637-419f-898e-77a3e58ebcf6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Metadatum := metadataHost;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Name" Id="{fe024c09-ed38-43b7-9187-f3c7a41f5351}">
      <Declaration><![CDATA[PROPERTY PUBLIC Name : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{323b22ce-44b5-400d-92c1-461c45c75128}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := _name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OffEvent" Id="{2b223bcc-14e5-4367-98d3-d5ec05befd3c}">
      <Declaration><![CDATA[METHOD PUBLIC OffEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OffEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnceEvent" Id="{6cc392a4-a097-4bcb-96ae-4087b3a20dec}">
      <Declaration><![CDATA[METHOD PUBLIC OnceEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnceEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnEvent" Id="{1c00bb5e-1161-4d75-8ee0-6ac931b47410}">
      <Declaration><![CDATA[METHOD PUBLIC OnEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Parent" Id="{9a294379-51fa-4591-9330-fbd292b4b9e4}">
      <Declaration><![CDATA[PROPERTY PUBLIC Parent : I_HostParameters]]></Declaration>
      <Get Name="Get" Id="{8535d94d-ca38-4631-9748-58404968af33}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Parent := _parent;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RegisterWithParent" Id="{e6732e8a-d3e0-45aa-991b-c9093e562e20}">
      <Declaration><![CDATA[METHOD PUBLIC RegisterWithParent
VAR_INPUT
	Parent : I_HostParameters;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Parent = 0 THEN
	RETURN;
END_IF

THIS^._parent := Parent;
Parent.Parameters.AddParameter(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{e13da5d9-f146-4f8c-80ad-7d2fd4163be7}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.StartObject();
Serializer.AddKeyString('name', _name);
Serializer.Addkey('datatype');
_data.SerializeTypeWith(Serializer);
Serializer.AddkeyObject('value', _data);
metadataHost.SerializeWith(Serializer);
Serializer.EndObject();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeFrom" Id="{038b54a1-ee3e-487e-a187-8053c58b8e83}">
      <Declaration><![CDATA[METHOD PUBLIC TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR
VAR
	parameterDeserializer : I_Deserializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := _data.TryDeserializeFrom(Deserializer, Feedback);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>