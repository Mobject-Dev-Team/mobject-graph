<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Content" Id="{a1becd62-c5be-4545-bd68-b18f8b0a7ad4}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Content EXTENDS Disposable IMPLEMENTS I_Content
VAR
	_name : T_MAXSTRING;
	_data : I_Datatype;
	_parent : I_HostContent;
	eventEmitter : EventEmitter;
	metadataHost : MetadataHost(THIS^, eventEmitter);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{d39c6d01-2391-4aca-8295-f79358bf5930}" />
    <Method Name="Accept" Id="{49805fb8-31ee-4a82-b289-bcb2b5ef6c54}">
      <Declaration><![CDATA[METHOD PUBLIC Accept
VAR_INPUT
	Visitor : I_ContentVisitor;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Visitor.VisitContent(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddMetadata" Id="{6cef2270-4a0c-0383-3796-6c1aaeca60fd}">
      <Declaration><![CDATA[METHOD PUBLIC AddMetadata : I_HostMetadata
VAR_INPUT
	Name : T_MAXSTRING;
	Data : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Metadatum.AddDataAsMetadata(Name, Data);
AddMetadata := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Data" Id="{043bb899-ca1b-4b5d-9a6f-1c072775095b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Data : I_DataType]]></Declaration>
      <Get Name="Get" Id="{731fdf49-98ff-484a-86af-6ab7dcde24aa}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Data := _data;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{5b0e1b53-f586-4837-9151-813b298086c0}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	Data : I_Datatype;
	Parent : I_HostContent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_name := Name;
_data := Data;
RegisterWithParent(Parent);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Metadatum" Id="{bf9c4856-4668-460a-b230-8867c3db63a9}">
      <Declaration><![CDATA[PROPERTY PUBLIC Metadatum : I_Metadatum]]></Declaration>
      <Get Name="Get" Id="{b3a8eafb-ffdf-4d30-bff5-b513a68683da}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Metadatum := metadataHost;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Name" Id="{02dad40a-24fd-4a58-86a0-1bacbe8296b4}">
      <Declaration><![CDATA[PROPERTY PUBLIC Name : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{e05a7c8b-9654-419e-9e0d-13465edc011f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := _name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OffEvent" Id="{cb99c071-141a-481d-ac70-509c894fa96b}">
      <Declaration><![CDATA[METHOD PUBLIC OffEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OffEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnceEvent" Id="{5baa2fdb-892f-4bd7-afa9-47095d251015}">
      <Declaration><![CDATA[METHOD PUBLIC OnceEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnceEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnEvent" Id="{e1afb3a8-37b1-4656-8bff-79377f310354}">
      <Declaration><![CDATA[METHOD PUBLIC OnEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Parent" Id="{9e95f5e6-a233-43fb-bad2-54c3337d7ef3}">
      <Declaration><![CDATA[PROPERTY PUBLIC Parent : I_HostContent]]></Declaration>
      <Get Name="Get" Id="{bc05df41-b0d5-4e49-ad54-653eca99faa9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Parent := _parent;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RegisterWithParent" Id="{5f509402-2565-40fb-bddc-79c33503c9a6}">
      <Declaration><![CDATA[METHOD PUBLIC RegisterWithParent
VAR_INPUT
	Parent : I_HostContent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Parent = 0 THEN
	RETURN;
END_IF

THIS^._parent := Parent;
Parent.Contents.AddContent(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{21461d0e-5942-4d07-93a3-25c7d1c8eecd}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.StartObject();
Serializer.AddKeyString('name',_name);
Serializer.Addkey('type');
_data.SerializeTypeWith(Serializer);
Serializer.AddkeyObject('value',_data);
metadataHost.SerializeWith(Serializer);
Serializer.EndObject();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>