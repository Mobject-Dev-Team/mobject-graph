<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="PreExecutionCheckExtension" Id="{e1709364-ceb8-04a8-14a1-53365be399b0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PreExecutionCheckExtension EXTENDS Extension IMPLEMENTS I_EventHandler
VAR
	parentAsPreCheckedNode : I_PreCheckedNode;
	preExecutionCheckFailedAlarm : PreExecutionCheckFailedAlarm(THIS^);
	enable : _BOOL(TRUE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{8b8747c4-0f8f-0319-1d0a-6c2dbad5b403}" />
    <Folder Name="Destructor" Id="{f03a93a3-9e99-0697-1dcf-84983d9495c8}" />
    <Folder Name="Private" Id="{48f7392b-1123-0fdd-1465-4950d78f2f43}" />
    <Method Name="DeregisterForPreExecuteEvent" Id="{2c3b90aa-d00c-03cd-15f0-e3dee20a4958}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE DeregisterForPreExecuteEvent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parentAsPreCheckedNode = 0 THEN
	RETURN;
END_IF

parentAsPreCheckedNode.OffEvent('OnNodePreExecute', THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{614b7c4e-b99f-0c47-2d6d-6b2ba7d1b48b}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

DeregisterForPreExecuteEvent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{88aa1380-81b7-011b-214d-d88dcb277d13}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	Parent : I_HostExtensions;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddParameter('enable', enable);

IF NOT __QUERYINTERFACE(Parent, parentAsPreCheckedNode) THEN
	RETURN;
END_IF

RegisterForPreExecuteEvent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleEvent" Id="{04dc61e6-c1ac-0c3c-25b2-374c9580a36b}">
      <Declaration><![CDATA[METHOD PUBLIC HandleEvent
VAR_INPUT
	Event : I_Event;
END_VAR
VAR
	nodePreExecuteEvent : I_NodePreExecuteEvent;
	preExecutionChecks : PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT enable.Value THEN
	IF preExecutionCheckFailedAlarm.Active THEN
		preExecutionCheckFailedAlarm.Clear();
	END_IF
	RETURN;
END_IF

IF NOT __QUERYINTERFACE(Event, nodePreExecuteEvent) THEN
	RETURN;
END_IF

parentAsPreCheckedNode.PreExecutionCheck(preExecutionChecks);
IF preExecutionChecks.Failed THEN
	preExecutionCheckFailedAlarm.Raise(preExecutionChecks.Reason);
	nodePreExecuteEvent.Cancel();
	RETURN;
END_IF

preExecutionCheckFailedAlarm.Clear();]]></ST>
      </Implementation>
    </Method>
    <Method Name="RegisterForPreExecuteEvent" Id="{62bced90-ba22-0c70-0417-0d94fceea0e4}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE RegisterForPreExecuteEvent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parentAsPreCheckedNode = 0 THEN
	RETURN;
END_IF

parentAsPreCheckedNode.OnEvent('OnNodePreExecute', this^);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>