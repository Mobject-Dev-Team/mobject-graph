<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{1c7dbdb3-3ad9-058e-2a75-807bd1bcee45}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR		
	graph_TestSuite : Graph_TestSuite;
	
	// playground
	datatypes : Datatypes;
	nodePrototypes : NodePrototypes;
	graph : Graph(nodePrototypes);
	basicPlcDatatypes : BasicPlcDatatypes;
	nodePack_PlcBasic : NodePack_PlcBasic;
	initialise: BOOL;

	server : RpcServer;
	graphApi : graphApi(graph, nodePrototypes, datatypes);	

	jsonDeserializer : JsonDeserializer;
	loadFirst, loadSecond : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// todo
// modify json to suit ideal
// - node id is now unique string
// - link is now [id_dint, sourceId_String, sourcePortName_String, destinationId_String, destinationPortName_String].

//TcUnit.RUN();

IF NOT initialise THEN
	basicPlcDatatypes.RegisterWith(datatypes);
	nodePrototypes.InstallNodePack(nodePack_PlcBasic);
	graphApi.RegisterWith(server);
	initialise := TRUE;
END_IF

graph.Run();

//IF loadFirst THEN
//	loadFirst := FALSE;
//	jsonDeserializer.TryLoad(TestJson.literalBoolLinkedToDisplayBool);
//	graph.TryDeserializeFrom(jsonDeserializer);
//END_IF

//IF loadSecond THEN
//	loadSecond := FALSE;
//	jsonDeserializer.TryLoad(TestJson.literalBoolLinkedToDisplayBool2);
//	graph.TryDeserializeFrom(jsonDeserializer);
//END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>