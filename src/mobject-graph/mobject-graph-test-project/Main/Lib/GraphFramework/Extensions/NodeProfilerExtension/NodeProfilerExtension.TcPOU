<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="NodeProfilerExtension" Id="{078a067e-fce2-01ca-0f10-5733debf89cc}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
FUNCTION_BLOCK NodeProfilerExtension EXTENDS ExtensionBase IMPLEMENTS I_EventHandler
VAR
	parent : I_Node;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{492a3c9c-ba24-0353-304f-0cf45f293e3c}" />
    <Folder Name="Destructor" Id="{6b279eb7-0c2f-0889-0e6d-30b4c7ffcdd3}" />
    <Folder Name="Private" Id="{51a59256-fdad-002f-1f85-d73f7704c10c}" />
    <Method Name="FB_exit" Id="{7618fb75-c5a9-093e-2154-186401b09106}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

UnregisterWithParent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{0f5ed215-a78e-078c-2d87-9d76416870b6}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	Parent : I_Node;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.parent := Parent;
RegisterWithParent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleEvent" Id="{4aa5d814-f727-0dbc-1313-67f98d26eb6e}">
      <Declaration><![CDATA[METHOD PUBLIC HandleEvent
VAR_INPUT
	Event : I_Event;
END_VAR
VAR
	nodeExecuteBeginEvent : I_NodeExecuteBeginEvent;
	nodeExecuteEndEvent : I_NodeExecuteEndEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __QUERYINTERFACE(Event, NodeExecuteBeginEvent) THEN
	//	
ELSIF __QUERYINTERFACE(Event, NodeExecuteEndEvent) THEN
	//
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="RegisterWithParent" Id="{aee6387e-d6b9-00a5-09fc-d64f8cd01726}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE RegisterWithParent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parent = 0 THEN
	RETURN;
END_IF

parent.AddExtension(THIS^);
parent.OnEvent('OnNodeExecuteBegin',THIS^);
parent.OnEvent('OnNodeExecuteEnd',THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="UnregisterWithParent" Id="{035f8f65-e573-0f93-3aa5-4e8fb96417ad}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE UnregisterWithParent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parent = 0 THEN
	RETURN;
END_IF

parent.OffEvent('OnNodeExecuteBegin',THIS^);
parent.OffEvent('OnNodeExecuteEnd',THIS^);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>