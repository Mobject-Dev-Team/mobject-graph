<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="NodeProtectionExtension" Id="{9333f4ac-bf14-0883-31a3-a1646eee6f26}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK NodeProtectionExtension EXTENDS ExtensionBase IMPLEMENTS I_EventHandler
VAR
	parent : I_NodeWithProtection;
	nodeProperty_Protection : Property_ANY('protection','BOOL', THIS^);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{5ef21104-2841-0bc0-09ab-332c7665e59d}" />
    <Folder Name="Destructor" Id="{74c6b421-49ed-0857-3dc1-3488abf310fc}" />
    <Folder Name="Protected" Id="{56670b6a-e74a-0d02-3a94-42080bcf64ac}" />
    <Method Name="FB_exit" Id="{17033b86-661f-0c7f-3f6d-1e18005f3e47}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

UnregisterWithParent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3f82d6c4-7348-0f4e-330a-7f09298b6602}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	Parent : I_NodeWithProtection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.parent := Parent;
RegisterWithParent();]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleEvent" Id="{947efc4f-860b-0b89-31c7-ed2e9660491d}">
      <Declaration><![CDATA[METHOD PUBLIC HandleEvent
VAR_INPUT
	Event : I_Event;
END_VAR
VAR
	nodePreExecuteEvent : I_NodePreExecuteEvent;
	preExecuteResult : HRESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __QUERYINTERFACE(Event, nodePreExecuteEvent) THEN
	RETURN;
END_IF

IF nodePreExecuteEvent.ExecuteCancelled THEN 
	RETURN;
END_IF

IF NOT IsProtected THEN
	RETURN;
END_IF

preExecuteResult := parent.PreExecuteCheck();

IF SUCCEEDED(preExecuteResult) THEN
	RETURN;
END_IF

nodePreExecuteEvent.Cancel();]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsProtected" Id="{36f6679e-b7ee-0abf-0b5e-78fa56990537}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsProtected : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c975c975-d4c4-0b40-278e-a6e0ae19b99a}">
        <Declaration><![CDATA[VAR
	value : BOOL;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nodeProperty_Protection.Get(value);
IsProtected := value;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RegisterWithParent" Id="{8d0d5853-572c-0a01-0c9a-3689592ed625}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED RegisterWithParent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parent = 0 THEN
	RETURN;
END_IF

parent.AddExtension(THIS^);
parent.OnEvent('OnNodePreExecute',THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="UnregisterWithParent" Id="{d1a8c63a-75ba-0f55-3e18-bd204f36815e}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED UnregisterWithParent
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF parent = 0 THEN
	RETURN;
END_IF

parent.OffEvent('OnNodePreExecute',THIS^);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>