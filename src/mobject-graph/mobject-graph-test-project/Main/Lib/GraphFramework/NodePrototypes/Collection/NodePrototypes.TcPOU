<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="NodePrototypes" Id="{3a71411c-013f-04b4-2fdb-abd75ba10395}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK NodePrototypes IMPLEMENTS I_NodePrototypes
VAR
	nodePrototypes : Dictionary;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="InsertByType" Id="{4d3a5f0c-8074-09fb-2906-a4aa05ab5434}">
      <Declaration><![CDATA[METHOD PUBLIC InsertByType
VAR_INPUT
	NodeType : T_MAXSTRING;
	NodePrototype : I_NodePrototype;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[nodePrototypes.AddOrUpdate(NodeType, NodePrototype);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{f25de65d-af0a-443e-a337-1981688bbf8a}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
VAR
	types : I_Collection;
	enumerator : I_ForwardEnumerator;
	typeName : T_MAXSTRING;
	nodePrototype : I_NodePrototype;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.StartArray();

types := nodePrototypes.GetKeys();
enumerator := types.GetEnumerator();

WHILE enumerator.MoveNext() DO
	
	IF NOT enumerator.TryGet(typeName) THEN
		CONTINUE;
	END_IF
	
	IF NOT nodePrototypes.TryGetValue(typeName, nodePrototype) THEN
		CONTINUE;
	END_IF
	
	nodePrototype.SerializeWith(Serializer);

END_WHILE

enumerator.Dispose();
types.Dispose();

Serializer.EndArray();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryCreateByType" Id="{ceb4bb2e-8751-4cf7-92a9-b7b5faf2cfa2}">
      <Declaration><![CDATA[METHOD PUBLIC TryCreateByType : BOOL
VAR_INPUT
	NodeType : T_MAXSTRING;
	Destination : I_Node;
END_VAR
VAR
	nodePrototype : I_NodePrototype;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT nodePrototypes.TryGetValue(NodeType,nodePrototype) THEN
	RETURN;
END_IF

Destination := nodePrototype.Clone();
TryCreateByType := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>