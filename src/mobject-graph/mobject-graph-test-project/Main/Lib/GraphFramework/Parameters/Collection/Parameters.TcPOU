<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Parameters" Id="{e8cfd737-5de2-0aab-37e6-aafad3b70646}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Parameters IMPLEMENTS I_Parameters
VAR
	parameters : Stack;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="GetEnumerator" Id="{de1e6ae6-1fe8-0ee0-0a12-d685e432ece8}">
      <Declaration><![CDATA[METHOD PUBLIC GetEnumerator : I_ForwardEnumerator
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetEnumerator := parameters.GetEnumerator();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Insert" Id="{5508455d-00d2-0f50-028f-3ced11306b2d}">
      <Declaration><![CDATA[METHOD PUBLIC Insert
VAR_INPUT
	Parameter : I_Parameter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[parameters.Push(Parameter);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetByName" Id="{e7acd9b9-fb76-06eb-2ed3-d373073fdcfe}">
      <Declaration><![CDATA[METHOD PUBLIC TryGetByName : BOOL
VAR_INPUT
	Name : STRING;
	Destination : REFERENCE TO I_Parameter;
END_VAR
VAR
	parameterEnumerator : I_ForwardEnumerator;
	currentParameter : I_Parameter;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[parameterEnumerator := parameters.GetEnumerator();

WHILE parameterEnumerator.MoveNext() DO 
	IF NOT parameterEnumerator.TryGet(currentParameter) THEN
		CONTINUE;
	END_IF
	
	IF currentParameter.Name = Name THEN 
		TryGetByName := TRUE;
		Destination := currentParameter;
		EXIT;
	END_IF

END_WHILE

parameterEnumerator.Dispose();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>