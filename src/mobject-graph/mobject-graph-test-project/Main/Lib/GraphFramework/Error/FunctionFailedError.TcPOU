<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FunctionFailedError" Id="{6afe3d82-8c95-018d-0c48-74d2b362619a}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK PUBLIC FunctionFailedError EXTENDS Error
VAR
	state : (CLEARED, RAISED);
	functionName : STRING;
	hresult : HRESULT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="Active" Id="{a857f38f-de86-0fe2-23e1-c64426ac4f16}">
      <Declaration><![CDATA[PROPERTY Active : BOOL]]></Declaration>
      <Get Name="Get" Id="{e7c8e295-14ad-0e2b-26e0-26b2158383dd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Active := state <> CLEARED;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clear" Id="{00f651db-78d0-00ee-39c3-d4e1301bf5ac}">
      <Declaration><![CDATA[METHOD PUBLIC Clear
]]></Declaration>
      <Implementation>
        <ST><![CDATA[functionName := '';
hresult := 0;
state := CLEARED;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Message" Id="{acadb727-d244-0000-101c-935ef9226490}">
      <Declaration><![CDATA[PROPERTY Message : T_MaxString]]></Declaration>
      <Get Name="Get" Id="{6ccb8b6b-b710-0bba-2899-b515b67d132d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Message := 'Function failed';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Raise" Id="{7a99739d-f60b-0dd3-2d9d-e01a86a3be6f}">
      <Declaration><![CDATA[METHOD PUBLIC Raise
VAR_INPUT
	FunctionName : STRING;
	HResult : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.functionName := FunctionName;
THIS^.hresult := HResult;
state := RAISED;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Reason" Id="{2345ce7c-d113-0a67-3437-4c9d204bf916}">
      <Declaration><![CDATA[PROPERTY Reason : T_MaxString]]></Declaration>
      <Get Name="Get" Id="{c6b3465a-cc1e-08cc-21ff-67ba20779908}">
        <Declaration><![CDATA[VAR
	message : STRING;
	returnCode : DWORD;
	returnCodeString : STRING;
	returnCodeMsg : STRING;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF state = CLEARED THEN
	RETURN;
END_IF

returnCode := DINT_TO_DWORD(hresult) AND 16#FFF;
returnCodeString := DWORD_TO_HEXSTR(returnCode, 3, FALSE);

CASE (returnCode) OF
	
	16#70A: returnCodeMsg := 'NOMEMORY';
	16#70B: returnCodeMsg := 'INVALIDPARM';
	16#70C: returnCodeMsg := 'NOTFOUND';
	16#70E: returnCodeMsg := 'INCOMPATIBLE';
	16#712: returnCodeMsg := 'INVALIDSTATE';
	16#719: returnCodeMsg := 'TIMEOUT';
	16#71A: returnCodeMsg := 'NOINTERFACE';
	16#71B: returnCodeMsg := 'INVALIDINTERFACE';
	16#71D: returnCodeMsg := 'INVALIDOBJID';
	16#734: returnCodeMsg := 'OUTOFRANGE';
	
END_CASE


message := functionName;
message := CONCAT(message,', Msg : ');
message := CONCAT(message,returnCodeMsg);
message := CONCAT(message,', Code : 16#');
message := CONCAT(message,returnCodeString);

Reason := message;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>