<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="InputPortHost" Id="{e0a5ed5e-e46b-4067-8ebc-7341fbde42fc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK InputPortHost IMPLEMENTS I_HostInputPorts, I_Serializable
VAR
	eventTarget : I_EventTarget;
	ports : Dictionary;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{8dde942f-4323-4fa1-9804-9541e8cea698}" />
    <Folder Name="Protected" Id="{badb4534-ffc4-49f0-987a-5da4faf0a42a}" />
    <Method Name="Accept" Id="{8201a6ae-d036-490b-a3e6-8c2ed40d0f50}">
      <Declaration><![CDATA[METHOD PUBLIC Accept
VAR_INPUT
	Visitor : I_InputPortVisitor;
END_VAR
VAR
	enumerator : I_ForwardEnumerator;
	port : I_InputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumerator := ports.GetEnumerator();

WHILE (enumerator.MoveNext()) DO
	
	IF enumerator.TryGet(port) THEN
		port.Accept(Visitor);
	END_IF

END_WHILE

enumerator.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddInputPort" Id="{b8a2721d-900a-4327-819d-af7c38fc2f18}">
      <Declaration><![CDATA[METHOD PUBLIC AddInputPort
VAR_INPUT
	InputPort : I_InputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ports.AddOrUpdate(InputPort.Name, InputPort);
EmitOnPortAddedEvent(InputPort);]]></ST>
      </Implementation>
    </Method>
    <Method Name="EmitOnPortAddedEvent" Id="{7ddbe6ad-349c-48e3-b30f-79ef4ac8af9b}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED EmitOnPortAddedEvent
VAR_INPUT
	Port : I_InputPort;
END_VAR
VAR
	pInputPortAddedEvent : POINTER TO InputPortAddedEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eventTarget = 0 THEN
	RETURN;
END_IF

pInputPortAddedEvent := __NEW(InputPortAddedEvent(Target := Port));
eventTarget.Emit('OnInputPortAdded',pInputPortAddedEvent^);
pInputPortAddedEvent^.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{e19fa22d-a160-44ca-b450-8dcb5d5aefa4}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	parentEventTarget : I_EventTarget;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventTarget := parentEventTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{3c42266c-de93-43bf-8c86-b3b026493e0d}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
VAR
	enumerator : I_ForwardEnumerator;
	port : I_InputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ports.Count = 0 THEN
	RETURN;
END_IF

Serializer.AddKey('inputPorts');
Serializer.StartArray();

enumerator := ports.GetEnumerator();

WHILE enumerator.MoveNext() DO
	IF enumerator.TryGet(port) THEN
		port.SerializeWith(Serializer);
	END_IF
END_WHILE

enumerator.Dispose();

Serializer.EndArray();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetInputPortByName" Id="{2486f46b-be90-47d4-8fbe-4a2cb0ae2c4f}">
      <Declaration><![CDATA[METHOD PUBLIC TryGetInputPortByName : BOOL
VAR_INPUT
	Name : T_MAXSTRING;
	Destination : REFERENCE TO I_InputPort;
END_VAR
VAR
	port : I_InputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT ports.TryGetValue(Name, port) THEN
	RETURN;
END_IF

Destination := port;
TryGetInputPortByName := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>