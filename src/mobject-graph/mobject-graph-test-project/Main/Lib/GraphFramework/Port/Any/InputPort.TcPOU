<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="InputPort" Id="{8a76cd64-8399-006f-0213-1bb5b2341bca}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'do not call this FB directly'}{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK InputPort EXTENDS Disposable IMPLEMENTS I_InputPort
VAR
	_name : T_MAXSTRING;
	_permittedDataTypes : T_MAXSTRING;
	_connectedTo : I_OutputPort;
	eventEmitter : EventEmitter;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c02273f4-e8fc-0d09-3c19-79f73fa57a1b}" />
    <Folder Name="Private" Id="{1f1fa75f-3537-0229-2498-8638fd4c140f}" />
    <Method Name="Accept" Id="{1625d170-79e2-014d-2c2b-8ace06c47aa1}">
      <Declaration><![CDATA[METHOD PUBLIC Accept
VAR_INPUT
	Visitor : I_InputPortVisitor;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Visitor.VisitInputPort(this^);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Connected" Id="{0eeca197-140f-0917-0914-20aa772b83ae}">
      <Declaration><![CDATA[PROPERTY PUBLIC Connected : BOOL]]></Declaration>
      <Get Name="Get" Id="{7caf9676-d732-0ed2-375f-00350fceb01e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Connected := _connectedTo <> 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ConnectTo" Id="{cf2a22c3-c119-0919-3767-3381d146e55b}">
      <Declaration><![CDATA[METHOD PUBLIC ConnectTo
VAR_INPUT
	OutputPort : I_OutputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_connectedTo := OutputPort;
_connectedTo.OnEvent('OnOutputPortChanged', THIS^);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Data" Id="{f697d0c9-35bd-003b-2eed-d1db3a1aaa7d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Data : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{9027c130-d714-0b66-2e0c-fed40c3b84cf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF NOT Connected THEN 
	RETURN;
END_IF

Data := _connectedTo.Data;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Disconnect" Id="{2d2d97fa-faba-033e-23df-3b334614454b}">
      <Declaration><![CDATA[METHOD PUBLIC Disconnect]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Connected THEN
	RETURN;
END_IF

_connectedTo.OffEvent('OnOutputPortChanged', THIS^);
_connectedTo := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="EmitOnInputPortChanged" Id="{7ac9cdfd-9dc5-4ff8-8987-c18d9fe1fa6d}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PROTECTED EmitOnInputPortChanged
VAR_INPUT
	PortChanged : I_InputPort;
END_VAR
VAR
	pInputPortChangeEvent : POINTER TO InputPortChangedEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pInputPortChangeEvent := __NEW(InputPortChangedEvent(TargetInputPort := PortChanged));
eventEmitter.Emit('OnInputPortChanged',pInputPortChangeEvent^);
pInputPortChangeEvent^.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{85cb6971-3869-03dd-0362-0b78635177f7}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Name : T_MAXSTRING;
	PermittedDataTypes : T_MAXSTRING;
	Parent : I_HaveInputPorts;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_name := Name;
_permittedDataTypes := PermittedDataTypes;

IF Parent = 0 THEN
	RETURN;
END_IF

Parent.AddInputPort(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleEvent" Id="{a301251b-128e-042e-2c82-4ee90daa8459}">
      <Declaration><![CDATA[METHOD PUBLIC HandleEvent
VAR_INPUT
	Event : I_Event;
END_VAR
VAR
	outputPortChangedEvent : I_OutputPortChangedEvent;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __QUERYINTERFACE(Event, outputPortChangedEvent) THEN
	HandleOutputPortChangedEvent(outputPortChangedEvent.TargetOutputPort);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleOutputPortChangedEvent" Id="{9bdbd293-4e3d-0e2f-0079-1e62c2ac0372}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PROTECTED HandleOutputPortChangedEvent
VAR_INPUT
	Source : I_OutputPort;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[EmitOnInputPortChanged(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Name" Id="{bed621d8-5fb5-029d-2ec1-72a1805573da}">
      <Declaration><![CDATA[PROPERTY PUBLIC Name : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{81e0229a-69c1-0712-0a6c-c9c3a3d10c8f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := _name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OffEvent" Id="{8831601f-10ed-0308-0255-7aeb488c0bb1}">
      <Declaration><![CDATA[METHOD PUBLIC OffEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OffEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnceEvent" Id="{02751623-dd18-0013-0361-602d9e5793b3}">
      <Declaration><![CDATA[METHOD PUBLIC OnceEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnceEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnEvent" Id="{6400660c-9990-0d44-03fa-8885dfec75cf}">
      <Declaration><![CDATA[METHOD PUBLIC OnEvent
VAR_INPUT
	EventName : T_MaxString;
	EventHandler : I_EventHandler;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[eventEmitter.OnEvent(EventName, EventHandler);]]></ST>
      </Implementation>
    </Method>
    <Property Name="PermittedDataTypes" Id="{756bbe97-8ed1-003d-213d-e72af1469808}">
      <Declaration><![CDATA[PROPERTY PUBLIC PermittedDataTypes : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{cd1c0acd-4bfd-0274-050d-5fc5fc240ae1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PermittedDataTypes := _permittedDataTypes;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryGet" Id="{f813caa3-f9f5-0763-25b7-95603e18c9c7}">
      <Declaration><![CDATA[METHOD PUBLIC TryGet : BOOL;
VAR_INPUT
	Value : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Connected THEN
	RETURN;
END_IF

TryGet := _connectedTo.TryGet(Value);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetTo" Id="{6cdee704-352c-0268-1a5b-c9cf7fee8290}">
      <Declaration><![CDATA[METHOD PUBLIC TryGetTo : BOOL;
VAR_INPUT
	Destination : PVOID;
	DestinationSize : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Connected THEN
	RETURN;
END_IF

TryGetTo := _connectedTo.TryGetTo(Destination, DestinationSize);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>